describe(bayview_parcels_clean[,3:6]) %>% html()
describe(bayview_parcels_clean) %>% html()
describe(bayview_parcels_clean)
Hmisc::describe(bayview_parcels_clean)
library("hmisc")
library("Hmisc")
install.packages("Hmisc")
library(Hmisc)
Hmisc::describe(bayview_parcels_clean)
describe(bayview_parcels_clean[,3:6])
describe(bayview_parcels_clean[,3:6]) %>% html()
summary(bayview_parcels_clean[,3:6] %>%
st_set_geometry(NULL) %>%
rename(`floor area` = "floorarea"))
# find the two special commercial areas.
bayview_heights <-
sf_heights[bayview_parcels_clean, ]
View(bayview_heights)
View(sunset_parcels)
View(sunset_parcels_zoning)
table(bayview_parcels_clean$zoning)
# summary of zones
knitr::kable(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc", Zoning = zoning)
)
# summary of zones
bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc", Zoning = zoning)
# summary of zones
bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc", Zoning = "zoning")
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
bayview_parcels_zoning <-
bayview_parcels_clean %>%
st_centroid() %>%
st_join(bayview_heights %>% select(gen_hght)) %>%
st_set_geometry(NULL) %>%
left_join(bayview_parcels_clean %>% select(apn)) %>%
st_as_sf() %>%
st_transform(projection) %>%
mutate(
lotarea = st_area(.) %>% as.numeric(),
max_floorarea = case_when(
zoning %in% c("RH-1","RH-2") ~ lotarea*1.8,
zoning == "NC-3" ~ lotarea*3.6
),
unused_floorarea = ifelse(
(max_floorarea - floorarea) > 0,
(max_floorarea - floorarea),
0
),
max_units = case_when(
zoning == "RH-1" ~ 1,
zoning == "RH-2" ~ 2,
zoning == "NC-3" ~ pmax(3, floor(lotarea/800))
),
unused_units = ifelse(
(max_units - units) > 0,
(max_units - units),
0
),
max_height = 40,
max_stories = floor(max_height/11),
unused_stories = ifelse(
(max_stories - stories) > 0,
(max_stories - stories),
0
)
) %>%
st_transform(4326)
View(bayview_parcels_zoning)
summary(bayview_parcels_zoning)
sum(bayview_parcels_zoning$unused_floorarea, na.rm = T)
sum(bayview_parcels_zoning$unused_units, na.rm = T)
# summary of zones
bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc", Zoning = "zoning")
# summary of zones
table(bayview_parcels %>%
# summary of zones
table(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc", Zoning = "zoning"))
# summary of zones
table(bayview_parcels %>%
# summary of zones
table(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()) %>%
rename(Description = "zoning_desc",
Zoning = "zoning"))
# summary of zones
table(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()))
# summary of zones
table(bayview_parcels %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()))
# summary of zones
table(bayview_parcels %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()))
# summary of zones
knitr::kable(bayview_parcels %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()))
# summary of zones
bayview_parcels %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n()))
# summary of zones
bayview_parcels %>%
group_by(zoning, zoning_desc) %>%
summarize(Freq = n())
# summary of zones
bayview_parcels %>%
group_by(zoning_desc) %>%
summarize(Freq = n())
# summary of zones
bayview_parcels %>%
group_by(zoning_desc) %>%
summarise(Freq = n())
# summary of zones
bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning_desc) %>%
summarise(Freq = n())
# summary of zones
bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n())
# summary of zones
knitr::table(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n())
)
# summary of zones
knitr::kable(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n())
)
# summary of zones
knitr::kable(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n()) %>%
rename(Zoning = "zoning",
Description = "zoning_desc")
)
table(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n()) %>%
rename(Zoning = "zoning",
Description = "zoning_desc")
)
# summary of zones
knitr::kable(bayview_parcels %>%
st_set_geometry(NULL) %>%
group_by(zoning, zoning_desc) %>%
summarise(Freq = n()) %>%
rename(Zoning = "zoning",
Description = "zoning_desc")
)
summary(sunset_parcels_zoning$unused_floorarea)
# Unused floor area mapped
floorarea_pal <- colorBin(
palette = "Greens",
bins = c(0,1000,5000,10000,max(sunset_parcels_zoning$unused_floorarea, na.rm = T))
)
# Unused floor area mapped
floorarea_pal <- colorBin(
palette = "Greens",
bins = c(0,1000,5000,10000,max(bayview_parcels_zoning$unused_floorarea, na.rm = T))
)
leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~floorarea_pal(unused_floorarea),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_floorarea)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = floorarea_pal,
values = ~unused_floorarea,
title = "Unused Floor Area"
)
summary(bayview_parcels_zoning$unused_units)
# Mapped additional units allowed
units_pal <- colorBin(
palette = "Purples",
bins = c(0,1,5,10,max(bayview_parcels_zoning$unused_units, na.rm = T))
)
leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~units_pal(unused_units),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_units)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = units_pal,
values = ~unused_units,
title = "Additional Units<br>Allowed"
)
saveRDS(sf_secured, "sf_secured.rds")
saveRDS(datakey, "datakey.rds")
saveRDS(usecode, "usecode.rds")
setwd("~/Stanford/rmd_refine")
unused_floors_plot <- leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~floorarea_pal(unused_floorarea),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_floorarea)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = floorarea_pal,
values = ~unused_floorarea,
title = "Unused Floor Area"
)
saveRDS(unused_floors_plot, "unused_floors_plot.rds")
add_units_allowed_plot <- leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~units_pal(unused_units),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_units)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = units_pal,
values = ~unused_units,
title = "Additional Units<br>Allowed"
)
saveRDS(add_units_allowed_plot, "add_units_allowed_plot.rds")
add_units_allowed_plot <- leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~units_pal(unused_units),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_units)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = units_pal,
values = ~unused_units,
title = "Additional Units<br>Allowed"
)
saveRDS(add_units_allowed_plot, "add_units_allowed_plot.rds")
setwd("~/Stanford/landuse_SF")
unused_floors_plot <- leaflet() %>%
addMapboxTiles(
style_id = "light-v9",
username = "mapbox"
) %>%
addPolygons(
data = bayview_parcels_zoning,
fillColor = ~floorarea_pal(unused_floorarea),
fillOpacity = 0.75,
color = "white",
weight = 0.5,
label = ~round(unused_floorarea)
) %>%
addLegend(
data = bayview_parcels_zoning,
pal = floorarea_pal,
values = ~unused_floorarea,
title = "Unused Floor Area"
)
saveRDS(unused_floors_plot, "unused_floors_plot.rds")
burden_threshold <- 0.3
# Get shapefiles
sf_co <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_co, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
ca_pums <- readRDS("ca_pums.rds")
sf_pums <-
ca_pums %>%
filter(PUMA %in% sf_pumas$PUMACE10)
# Households with children burden dataset
sf_burden_childhh <-
sf_pums %>%
filter(HINCP > 0) %>%
filter(SPORDER == 1, HUPAC != "4") %>%
transmute(
PUMA = PUMA,
weight = WGTP,
housingcost = ifelse(
SMOCP > 0,
SMOCP*12*as.numeric(ADJHSG),
GRNTP*12*as.numeric(ADJHSG)
),
income = HINCP*as.numeric(ADJINC),
burden_perc = housingcost/income,
burden_30 = housingcost - burden_threshold*income,
incomegap_30 = housingcost/burden_threshold - income
)
# Households with children burden by PUMA
sf_burden_hhchild_pumas <-
sf_burden_childhh %>%
mutate(
burdened_30 = ifelse(
burden_perc >= burden_threshold,
weight,
0
),
excess_30 = ifelse(
burden_30 < 0,
burden_30,
0
),
burden_30 = ifelse(
burden_30 > 0,
burden_30,
0
),
incomegap_30 = ifelse(
incomegap_30 > 0,
incomegap_30,
0
)
) %>%
group_by(PUMA) %>%
summarize(
burdened_30 = sum(burdened_30),
households = sum(weight),
burden_30 = sum(burden_30*weight),
incomegap_30 = sum(incomegap_30*weight),
excess_30 = sum(excess_30*weight)
) %>%
mutate(
burdened_30_perc = burdened_30/households
) %>%
left_join(sf_pumas %>% select(PUMA = PUMACE10, NAME10)) %>%
st_as_sf() %>%
st_transform(crs = 4326)
# Households with children burden by PUMA
sf_burden_hhchild_pumas <-
sf_burden_childhh %>%
mutate(
burdened_30 = ifelse(
burden_perc >= burden_threshold,
weight,
0
),
excess_30 = ifelse(
burden_30 < 0,
burden_30,
0
),
burden_30 = ifelse(
burden_30 > 0,
burden_30,
0
),
incomegap_30 = ifelse(
incomegap_30 > 0,
incomegap_30,
0
)
) %>%
group_by(PUMA) %>%
summarise(
burdened_30 = sum(burdened_30),
households = sum(weight),
burden_30 = sum(burden_30*weight),
incomegap_30 = sum(incomegap_30*weight),
excess_30 = sum(excess_30*weight)
) %>%
mutate(
burdened_30_perc = burdened_30/households
) %>%
left_join(sf_pumas %>% select(PUMA = PUMACE10, NAME10)) %>%
st_as_sf() %>%
st_transform(crs = 4326)
burden_pal1 <- colorNumeric(
palette = "Reds",
domain = sf_burden_hhchild_pumas$burdened_30_perc
)
sf_burden_pumas_plot <- sf_burden_hhchild_pumas %>%
leaflet() %>%
addMapboxTiles(
style_id = "streets-v11",
username = "mapbox"
) %>%
addPolygons(
fillColor = ~burden_pal1(burdened_30_perc),
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~paste0(round(burdened_30_perc*100), "% of households paying 30%+ of income on housing"),
highlightOptions = highlightOptions(
weight = 2
)
) %>%
addLegend(
pal = burden_pal1,
values = ~burdened_30_perc,
title = "Proportion Cost-burdened<br>households"
)
sf_burden_pumas_plot
saveRDS(sf_burden_pumas_plot, "sf_burden_pumas_plot.rds")
burden_pal2 <- colorNumeric(
palette = "Oranges",
domain = sf_burden_hhchild_pumas$burden_30/1e6
)
sf_burden_cost_plot <- sf_burden_hhchild_pumas %>%
leaflet() %>%
addMapboxTiles(
style_id = "streets-v11",
username = "mapbox"
) %>%
addPolygons(
fillColor = ~burden_pal2(burden_30/1e6),
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~paste0("$", round(burden_30/1e6), "M total annual cost burden"),
highlightOptions = highlightOptions(
weight = 2
)
) %>%
addLegend(
pal = burden_pal2,
values = ~burden_30/1e6,
title = "Total housing cost<br>burden, in $ millions"
)
saveRDS(sf_burden_cost_plot, "sf_burden_cost_plot.rds")
install.packages("flexdashboard")
setwd("~/Stanford/flex-dashboards")
sf_burden_pumas_plot %>% setView(37.7576793, -122.5076397)
sf_burden_pumas_plot %>% setView(37.7576793, -122.5076397, zoom = 5)
sf_burden_pumas_plot %>% setView(-122.5076397, 37.7576793, zoom = 5)
sf_burden_pumas_plot %>% setView(-122.5076397, 37.7576793, zoom = 25)
sf_burden_pumas_plot %>% setView(-122.5076397, 37.7576793, zoom = 10)
sf_burden_pumas_plot %>% setView(-122.5076397, 37.7576793, zoom = 15)
sf_burden_pumas_plot %>% setView(-122.5076397, 37.7576793, zoom = 12)
sf_burden_pumas_plot %>% setView(-122.436057, 37.756865, zoom = 12)
sf_burden_pumas_plot %>% setView(-122.436057, 37.756865, zoom = 11)
rmarkdown::render(
input = "dashboard_demo.Rmd",
output_format = "flexdashboard::flex_dashboard",
output_file = "dashboard_demo.html"
)
rmarkdown::render(
input = "A6_SF_Housing_Dashboard.Rmd",
output_format = "flexdashboard::flex_dashboard",
output_file = "A6_SF_Housing_Dashboard.html"
)
